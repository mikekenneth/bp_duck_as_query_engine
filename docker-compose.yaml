version: "3.8"

services:
  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    container_name: minio
    ports:
      - '9000:9000'  #Â API
      - '9001:9001'  # Web Interface
    env_file:
      - ./config/minio.env
    command: server --console-address ":9001" --address ":9000" /data
    healthcheck:
      test: curl --fail -I http://localhost:9000/minio/health/live || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

  # This will load the raw file on the Minio Bucket
  minio-mc:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    container_name: minio-mc
    depends_on:
    - minio
    volumes:
      - './data/raw:/raw_data'
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config;
      /usr/bin/mc config host add myminio http://minio:9000 minio_root minio_toor;
      /usr/bin/mc mb myminio/duckdb-bucket;
      /usr/bin/mc cp /raw_data/* myminio/duckdb-bucket/init_data/;
      exit 0;
      "

  postgres:
    container_name: postgres
    image: postgres:15
    ports:
      - 5433:5432 # Map host port 5433
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data

  mysql:
    image: mysql:9.2
    container_name: mysql
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'

  nginx:
    container_name: nginx
    image: nginx:1.27.4
    ports:
      - "8088:80"  # Map host port 8088
    volumes:
      - ./data/web/companies_data.json:/usr/share/nginx/html/companies_data.json  # Mount data.json into the container's HTML directory
      - ./config/nginx.conf:/etc/nginx/nginx.conf  # Mount custom nginx config


  duckdb-cli:
    container_name: duckdb-cli
    depends_on:
      - minio
      - nginx
      - postgres
      - mysql
    build: 
      dockerfile: ./duckdb_cli.Dockerfile
    image: mikekenneth/duckdb_cli
    volumes:
      - ./duckdb_init.sql:/usr/app/init.sql
    # stdin_open: true # docker run -i
    # tty: true        # docker run -t