version: "3.8"

services:
  duckdb:
    image: python:3.11-slim  # Or your preferred Python version
    volumes:
      - ./data/db:/data  # Mount a local 'data' directory for DuckDB DB
    working_dir: /data
    command:
      - /bin/bash
      - -c
      - |
        python -m pip install duckdb==1.2.1 && python -i -c "import duckdb;c = duckdb.connect('/data/duck.db'); c.sql('CALL start_ui_server()')"
        tail -f /dev/null
    ports:
      - '8213:4213'  # DuckDB UI Port



  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    container_name: minio
    ports:
      - '9000:9000'  #Â API
      - '9001:9001'  # Web Interface
    volumes:
      - './data/minio_data:/data'
    env_file:
      - ./config/minio.env
    command: server --console-address ":9001" --address ":9000" /data
    healthcheck:
      test: curl --fail -I http://localhost:9000/minio/health/live || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

  # This will load the raw file on the Minio Bucket
  minio-mc:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    container_name: minio-mc
    depends_on:
    - minio
    env_file:
      - ./config/minio.env
    volumes:
      - './data/raw:/raw_data'
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config;
      /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/duckdb-bucket;
      /usr/bin/mc cp /raw_data/* myminio/duckdb-bucket;
      exit 0;
      "

  postgres:
    container_name: postgres
    image: postgres:15
    ports:
      - 5433:5432 # Map host port 5433
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data

  nginx:
    container_name: nginx
    image: nginx:1.27
    ports:
      - "8088:80"  # Map host port 8088
    volumes:
      - ./data/web/data.json:/usr/share/nginx/html/data.json  # Mount data.json into the container's HTML directory
      - ./config/nginx.conf:/etc/nginx/nginx.conf  # Mount custom nginx config
